{"version":3,"sources":["App.js","index.js"],"names":["App","useState","calc","setCalc","result","setResult","ops","updateCalc","value","includes","slice","eval","toString","createdigits","digits","i","push","onClick","calculate","deleteLast","clear","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"grBAGA,SAASA,MACP,cAAwBC,oDAAS,IAAjC,+JAAOC,KAAP,cAAaC,QAAb,cACA,WAA4BF,oDAAS,IAArC,gKAAOG,OAAP,cAAeC,UAAf,cAEMC,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,KAE1BC,WAAa,SAAbA,WAAaC,OAEfF,IAAIG,SAASD,QAAmB,KAATN,MACvBI,IAAIG,SAASD,QAAUF,IAAIG,SAASP,KAAKQ,OAAO,MAKlDP,QAAQD,KAAOM,OACVF,IAAIG,SAASD,QAChBH,UAAUM,KAAKT,KAAOM,OAAOI,cAG3BC,aAAe,WAGnB,IAFA,IAAMC,EAAS,GADU,WAGhBC,GACPD,EAAOE,KACL,qEAAQC,QAAS,kBAAKV,WAAWQ,EAAEH,aAAnC,SAAyDG,GAAJA,KAFhDA,EAAI,EAAGA,EAAI,GAAIA,IAAM,EAArBA,GAKT,OAAOD,GAGHI,UAAY,SAAZA,YACJf,QAAQQ,KAAKT,MAAMU,aAGfO,WAAa,WACjB,GAAY,IAARjB,KAAJ,CAGA,IAAMM,EAAON,KAAKQ,MAAM,GAAI,GAE5BP,QAAQK,KAGJY,MAAQ,WACZ,IAAMZ,EAAON,KAAKQ,MAAM,GAAIF,GAC5BL,QAAQK,IAGV,OAEE,kEAAKa,UAAU,MAAf,SACE,mEAAKA,UAAU,aAAf,UACE,mEAAKA,UAAU,UAAf,UACIjB,OAAS,kFAAQA,OAAR,OAAyB,GADtC,OAEGF,MAAQ,OAEX,mEAAKmB,UAAU,YAAf,UACE,qEAAQJ,QAAS,kBAAKV,WAAW,MAAjC,eACA,qEAAQU,QAAS,kBAAKV,WAAW,MAAjC,eACA,qEAAQU,QAAS,kBAAKV,WAAW,MAAjC,eACA,qEAAQU,QAAS,kBAAKV,WAAW,MAAjC,kBAGA,qEAAQU,QAASE,WAAjB,iBACA,qEAAQF,QAASG,MAAjB,mBAEF,mEAAKC,UAAU,SAAf,UACIR,eACF,qEAAQI,QAAS,kBAAKV,WAAW,MAAjC,eACA,qEAAQU,QAAS,kBAAKV,WAAW,MAAjC,eAEA,qEAAQU,QAASC,UAAjB,uBAOKlB,2B,+BCjFf,iEAKAsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.20ab0fb8.chunk.js","sourcesContent":["//Project by Nevin Bullywon\nimport React, {useState} from \"react\"\n\nfunction App() {\n  const [calc, setCalc] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  const ops =['/', '*', '+', '-', '.'];//creating my operators\n\n  const updateCalc = value =>{\n    if(\n      ops.includes(value) && calc === '' ||\n      ops.includes(value) && ops.includes(calc.slice(-1)\n      )\n    ) {\n      return;\n    }\n    setCalc(calc + value);\n    if (!ops.includes(value)) {\n      setResult(eval(calc + value).toString());\n    }\n  }\n  const createdigits = () => {\n    const digits = [];\n\n    for (let i = 1; i < 10; i++) {//creating a function for my number buttons from 1-9 to reduce less code clutter\n      digits.push(\n        <button onClick={()=> updateCalc(i.toString())} key={i}>{i}</button>\n      )\n    }\n    return digits;\n  }\n\n  const calculate = () =>{\n    setCalc(eval(calc).toString());\n  }\n\n  const deleteLast = () =>{\n    if (calc == ''){\n      return;\n    }\n    const value =calc.slice(0, -1);//pressing DEL will remove 1 number in front\n\n    setCalc(value);\n  }\n\n  const clear = () =>{\n    const value =calc.slice(0, -value);//pressing clear will delete everything on the screen\n    setCalc(value);\n  }\n\n  return (\n    \n    <div className=\"App\">\n      <div className=\"calculator\">\n        <div className=\"display\">\n          { result ? <span>({result})</span>: ''}&nbsp; \n          {calc || \"0\"}\n        </div>\n        <div className=\"operators\">\n          <button onClick={()=> updateCalc('+')}>+</button> \n          <button onClick={()=> updateCalc('-')}>-</button>\n          <button onClick={()=> updateCalc('*')}>x</button>\n          <button onClick={()=> updateCalc('/')}>รท</button>\n\n\n          <button onClick={deleteLast}>DEL</button>\n          <button onClick={clear}>CA</button>\n        </div>\n        <div className=\"digits\">\n          { createdigits ()}\n          <button onClick={()=> updateCalc('0')}>0</button>\n          <button onClick={()=> updateCalc('.')}>.</button>\n\n          <button onClick={calculate}>=</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}